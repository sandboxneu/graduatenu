import { ScheduleCourse } from "../../../common/types";
import {
  DNDSchedule,
  DNDScheduleCourse,
  ISimplifiedCourseDataAPI,
  SeasonEnum,
  StatusEnum,
  ICourseManagmentBlock,
  ICourseWithCount,
} from "../models/types";

const mockClass = (num: number): DNDScheduleCourse => ({
  semester: null,
  classId: "3500",
  subject: "CS",
  numCreditsMin: 4,
  numCreditsMax: 4,
  dndId: "class-" + num,
  name: "Object-Oriented Design",
});

export const mockEmptySchedule: DNDSchedule = {
  years: [2019, 2020, 2021, 2022],
  yearMap: {
    2019: {
      year: 2019,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2019,
        termId: 201910,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2019,
        termId: 201930,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2019,
        termId: 201940,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2019,
        termId: 201960,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
    2020: {
      year: 2020,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2020,
        termId: 202010,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2020,
        termId: 202030,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2020,
        termId: 202040,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2020,
        termId: 202060,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
    2021: {
      year: 2021,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2021,
        termId: 202110,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2021,
        termId: 202130,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2021,
        termId: 202140,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2021,
        termId: 202160,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
    2022: {
      year: 2022,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2022,
        termId: 202210,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2022,
        termId: 202230,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2022,
        termId: 202240,
        status: StatusEnum.CLASSES,
        classes: [],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2022,
        termId: 202260,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
  },
};

export const mockData: DNDSchedule = {
  years: [2019, 2020],
  yearMap: {
    2019: {
      year: 2019,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2019,
        termId: 201910,
        status: StatusEnum.CLASSES,
        classes: [mockClass(1), mockClass(2), mockClass(3), mockClass(4)],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2019,
        termId: 201930,
        status: StatusEnum.CLASSES,
        classes: [mockClass(5), mockClass(6), mockClass(7), mockClass(8)],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2019,
        termId: 201940,
        status: StatusEnum.CLASSES,
        classes: [mockClass(9), mockClass(10)],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2019,
        termId: 201960,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
    2020: {
      year: 2020,
      isSummerFull: false,
      fall: {
        season: SeasonEnum.FL,
        year: 2020,
        termId: 202010,
        status: StatusEnum.CLASSES,
        classes: [mockClass(11), mockClass(12), mockClass(13), mockClass(14)],
      },
      spring: {
        season: SeasonEnum.SP,
        year: 2020,
        termId: 202030,
        status: StatusEnum.CLASSES,
        classes: [mockClass(15), mockClass(16), mockClass(17), mockClass(18)],
      },
      summer1: {
        season: SeasonEnum.S1,
        year: 2020,
        termId: 202040,
        status: StatusEnum.CLASSES,
        classes: [mockClass(19), mockClass(20)],
      },
      summer2: {
        season: SeasonEnum.S2,
        year: 2020,
        termId: 202060,
        status: StatusEnum.CLASSES,
        classes: [],
      },
    },
  },
};

export const mockKhouryClassesData = [
  {
    subject: "CS",
    course_id: "2500",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "1800",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "ENGW",
    course_id: "1111",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "1200",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "GAME",
    course_id: "2500",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "2501",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "1802",
    semester: "201910",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "2801",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "2800",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "2510",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "2511",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "ARTF",
    course_id: "1122",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "PHIL",
    course_id: "1145",
    semester: "201930",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3000",
    semester: "201940",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3200",
    semester: "201940",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3500",
    semester: "202010",
    completion: "PASSED",
  },
  {
    subject: "MATH",
    course_id: "2331",
    semester: "202010",
    completion: "PASSED",
  },
  {
    subject: "MATH",
    course_id: "3081",
    semester: "202010",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3650",
    semester: "202010",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3950",
    semester: "202010",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "4400",
    semester: "202030",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "1210",
    semester: "202030",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "3700",
    semester: "202030",
    completion: "PASSED",
  },
  {
    subject: "DS",
    course_id: "3000",
    semester: "202030",
    completion: "PASSED",
  },
  {
    subject: "ENGW",
    course_id: "3302",
    semester: "202030",
    completion: "PASSED",
  },
  {
    subject: "COOP",
    course_id: "3945",
    semester: "202060",
    completion: "PASSED",
  },
  {
    subject: "COOP",
    course_id: "3945",
    semester: "202110",
    completion: "PASSED",
  },
  {
    subject: "ARTG",
    course_id: "2251",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "ARTG",
    course_id: "2252",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "ARTG",
    course_id: "2250",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "CS",
    course_id: "4500",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "EECE",
    course_id: "2322",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "EECE",
    course_id: "2323",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "ARTF",
    course_id: "1123",
    semester: "202130",
    completion: "PASSED",
  },
  {
    subject: "MATH",
    course_id: "1341",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "MATH",
    course_id: "1342",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "CHEM",
    course_id: "1211",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "CHEM",
    course_id: "1212",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "CHEM",
    course_id: "1214",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "CHEM",
    course_id: "1215",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "PHYS",
    course_id: "1151",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "PHYS",
    course_id: "1152",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "PHYS",
    course_id: "1153",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "PSYC",
    course_id: "1101",
    semester: null,
    completion: "TRANSFER",
  },
  {
    subject: "HIST",
    course_id: "1130",
    semester: null,
    completion: "TRANSFER",
  },
];

export const mockCourseManagmentBlock: ICourseManagmentBlock[] = [
  {
    courseId: "CS2500",
    courseName: "Fundementals of Computer Science 1",
    numStudents: 50,
    numConflicts: 200,
    topThreeConflicts: [
      "CS 1800 Discrete Math",
      "CS 1200 leadership and such",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },

  {
    courseId: "CS2510",
    courseName:
      "Fundementals of Computer Science 2 VERY VERY LONG WOW LOOK AT THIS BOI",
    numStudents: 5000000,
    numConflicts: 20,
    topThreeConflicts: [
      "CS 1800 Discrete Math",
      "CS 1200 leadership and such",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 3000, 2024: 0 },
  },

  {
    courseId: "CS1210",
    courseName: "be a leader i guess ?",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "CS 35000 Alorithms and data",
      "CS 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "CS1210",
    courseName: "be a leader i guess ?",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "CS 35000 Alorithms and data",
      "CS 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "HIST1210",
    courseName: "learn the history young one",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "ART1234",
    courseName: "i am picasso",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
  {
    courseId: "PHIL6969",
    courseName: "i think therefore i am",
    numStudents: 0,
    numConflicts: 23450,
    topThreeConflicts: [
      "ENGW 3302 learn to write bro",
      "ART 4200 lol",
      "CS 4500 Software Dev (?)",
    ],
    distribution: { 2021: 500, 2022: 30, 2023: 30, 2024: 0 },
  },
];

export const mockTop5ClassesWithEnrollees: ICourseWithCount[] = [
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 260,
  },
  {
    courseId: "CS 6666",
    courseName: "hello i am class",
    count: 260,
  },
  {
    courseId: "CS 2504",
    courseName: "Fundamentals of Computer Science 4",
    count: 160,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 260,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 260,
  },
];

export const mockTop5ClassPairs: ICourseWithCount[] = [
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 180,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 10,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 180,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 1800,
  },
  {
    courseId: "CS 2500",
    courseName: "Fundamentals of Computer Science 1",
    count: 180,
  },
];

const mockAppointments = [
  {
    id: 0,
    userId: 1,
    fullname: "Alexander Grob",
    email: "grob.a@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science and Math",
    planId: 1,
    planName: "5 Year CS Plan",
    planMajor: "Computer Science",
    appointmentTime: "Mar 14, 2021",
  },
  {
    id: 0,
    userId: 1,
    fullname: "Iman Moreira",
    email: "moreira.i@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science and Bio",
    planId: 1,
    planName: "Memes for days",
    planMajor: "Computer Science and Math",
    appointmentTime: "Mar 14, 2021",
  },
  {
    id: 0,
    userId: 1,
    fullname: "Nils Backe",
    email: "backe.n@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science",
    planId: 1,
    planName: "Three and out",
    planMajor: "Computer Science and Design",
    appointmentTime: "Mar 14, 2021",
  },
  {
    id: 0,
    userId: 1,
    fullname: "Andrew Leung",
    email: "leung.a@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science",
    planId: 1,
    planName: "Lets drop some beats",
    planMajor: "Computer Science",
    appointmentTime: "Mar 14, 2021",
  },
  {
    id: 0,
    userId: 1,
    fullname: "Arkin Mukherjee",
    email: "mukherjee.a@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science",
    planId: 1,
    planName: "gme to the moon",
    planMajor: "Computer Science",
    appointmentTime: "Mar 14, 2021",
  },
  {
    id: 0,
    userId: 1,
    fullname: "Arun Jeevanantham",
    email: "jeevanantham.a@northeastern.edu",
    nuid: "001211929",
    major: "Computer Science",
    planId: 1,
    planName: "A really really really long name",
    planMajor: "Computer Science",
    appointmentTime: "Mar 14, 2021",
  },
];
